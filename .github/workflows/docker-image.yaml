name: Docker

on:
  schedule:
    - cron: '19 6 * * 0'
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]
  #   paths:
  #     - Dockerfile

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
            - dockerfile: ./fah-client-bastet/Dockerfile
              image: ghcr.io/l13t/fah-client-bastet
              context: ./fah-client-bastet
            - dockerfile: ./fah-web-client-bastet/Dockerfile
              image: ghcr.io/l13t/fah-web-client-bastet
              context: ./fah-web-client-bastet
    permissions:
        contents: read
        packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: set release date
        run: |
          echo "RELEASE_DATE=$(date '+%Y%m%d')" >> ${GITHUB_ENV}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.image }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.dockerfile }}
          context: ${{ matrix.context }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ matrix.image }}:${{ env.RELEASE_DATE }},${{ matrix.image }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
